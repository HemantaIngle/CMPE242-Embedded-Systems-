Lab on ADC 
(Version 2.0) 
Note this lab assignment is updated with the lab demo rubrics.  

Anglog to digital conversion (ADC) technology is one of the cores in IoT (internet of things) 
applications, sensor interface, control and many other areas. In this lab you will desing and
implement the following ADC technique for sensor interface: 

1. Design and build prototype to realize ARMSVR (embedded ARM11 server) to LPCNOD (embedded 
LPC1769 MCU system) communication via UART communication protocol. You may want to use RJ11
or RJ45 connectors on ARMSVR and LPCNOD, then use RJ11 or CAT5 or CAT6 cable to link both 
systems together. 

2. Design and implement ADC on LPCNOD, use potential meter component to allow the circuit output
volatage varies from 0 to 3.3 VDC range, and connect the circuit output to AIN pin (ADC input pin) 
of the LPCNOD. Then write a ADC program to realize ADC characteristic curve calibration by taking 
10 points data corresponding to 10 analog inputs evenly spaced from 0 volt to 3.3 volt. So you
will have the following: 
(vin1, dout1)
(vin2, dout2)
(vin3, dout3) 
...
...
(vin10, dout10) 

Use build-in interpoliation formula from an xecell spread sheet to find the characteristic curve
of the ADC, e.g., f(x), where x is the input voltage. Based f(x) design a compensation function 
f_comp(x), such that a good line function of the ADC can be achieved, e.g., 
ax = f(x) + f_comp(x)      ... (1)
 
3. Use the fft.c program from the lecture to write your program for power spectrum computation and 
ADC data validation. You will need to use your built ADC circuit to provide ADC data from LPCNOD
to ARMSVR. For testing purpose, the data can be generated by first altering the analog circuit 
output from 0 to 3.3 vdc, then ADC from LPCNOD will generate digital output as ADC data. Then 
LPCNOD will stream these LPCNOD ADC data via UART link to ARMSVR, where power spectrum will be 
computed and ADC data validation will be performed. If the data is not validated, then improve your 
ADC sampling rate per Nyquest sampling priciple till the data is validated as good data. Be 
sure in your implementation, these data and computation result are properly displayed and/or 
visualized. 

____________________Integrated Lab Demo Rubrics_________________________________

1. The lab demo is team demo, each team will have 4 people; 

2. The lab demo should consists of 3 parts: 
   (2.1) the ADC calibration and linearity characterization as well compensation function; 
   (2.2) the ADC data validation; 
   (2.3) the PID controller demo with PWM motor control and I2C sensor integration; 
 
3. Rubrics for the lab demo is the same as the previous lab with hardware (check list of 3
   items, e.g., system block diagrams, circuit schematics, and pin connectivity tables as 
   well as photos) and software (algorithm description, flow charts, and pseudo code, as well
   as testing and verification). 

4. ADC calibration demo: 
   (4.1) 10 pairs of data for ADC characterization; 
   (4.2) interpolation function from excell sheet based on 10 pairs of data; 
   (4.3) compensation function;
   (4.5) ADC output after compensation function implemented to demostrate the effectness; 

5. PID controller integration demo: 
   (5.1) pwm control of a motor (stepper motor or servo motor); 
   (5.2) I2C sensor mounted on the motor and output data from sensor to the node (LPCNOD or 
         equivalent) then transmitted to the embedded server (ARMSVR or JETSVR); 
   (5.3) PID controller simulation of self-driving with each control actions send to 
         pwm motor, and with the sensor data read back to the PID controller; 
   (5.4) display the data of the controlled motion path; 
   (5.5) OpenGL (optional bonus) visualization of the control motion path;    
   (5.6) Jetsvr (optional bonus) for replacement of ARMSVR. 

(END) 



